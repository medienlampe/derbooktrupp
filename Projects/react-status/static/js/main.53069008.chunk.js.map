{"version":3,"sources":["components/Clock.js","components/Weather.js","components/Header.js","components/Logo.js","App.js","serviceWorker.js","index.js"],"names":["Clock","props","_useState","useState","timezone","_useState2","Object","slicedToArray","setTimezone","useEffect","timer","setTimeout","GMTOffset","Date","getTimezoneOffset","timeZoneString","updateTimezone","clearTimeout","_useState3","hours","minutes","seconds","_useState4","clock","setClock","checkTime","i","currentDate","h","getHours","m","getMinutes","s","getSeconds","updateClock","react_default","a","createElement","id","className","coord","lon","lat","weather","main","description","icon","base","temp","pressure","humidity","temp_min","temp_max","visibility","wind","speed","deg","clouds","all","dt","sys","type","message","country","sunrise","sunset","name","cod","setWeather","updateWeather","_updateWeather","apply","this","arguments","asyncToGenerator","regenerator_default","mark","_callee","result","wrap","_context","prev","next","axios","sent","data","stop","Math","ceil","Header","Weather_Clock","Logo","xmlns","viewBox","d","points","x","y","width","height","App","react","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.53069008.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nexport default function Clock(props) {\n  const [timezone, setTimezone] = useState({\n    timezone: \"MEZ\"\n  });\n\n  function updateTimezone() {\n    var currentDate = new Date(),\n      GMTOffset = currentDate.getTimezoneOffset % 60,\n      timeZoneString = \"GMT\";\n\n    if ((GMTOffset = 1)) {\n      timeZoneString = \"MEZ\";\n    } else if ((GMTOffset = 2)) {\n      timeZoneString = \"MESZ\";\n    } else if (GMTOffset > 0) {\n      timeZoneString = \"GMT+\" + GMTOffset;\n    } else if (GMTOffset < 0) {\n      timeZoneString = \"GMT\" + GMTOffset;\n    }\n\n    setTimezone({ timezone: timeZoneString });\n  }\n\n  useEffect(() => {\n    let timer = setTimeout(() => updateTimezone(), 1000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  });\n\n  const [clock, setClock] = useState({\n    hours: \"00\",\n    minutes: \"00\",\n    seconds: \"00\"\n  });\n\n  function updateClock() {\n    var currentDate = new Date(),\n      h = currentDate.getHours(),\n      m = currentDate.getMinutes(),\n      s = currentDate.getSeconds();\n\n    h = checkTime(h);\n    m = checkTime(m);\n    s = checkTime(s);\n\n    setClock({ hours: h, minutes: m, seconds: s });\n  }\n\n  function checkTime(i) {\n    if (i < 10) {\n      i = \"0\" + i;\n    } // add zero in front of numbers < 10\n    return i;\n  }\n\n  useEffect(() => {\n    let timer = setTimeout(() => updateClock(), 1000);\n\n    // this will clear Timeout when component unmont like in willComponentUnmount\n    return () => {\n      clearTimeout(timer);\n    };\n  });\n  return (\n    <div id=\"time\">\n      <span id=\"clock\">\n        <span id=\"clock-hours\">{clock.hours}</span>\n        <span className=\"clock-dots\">:</span>\n        <span id=\"clock-minutes\">{clock.minutes}</span>\n      </span>{\" \"}\n      Uhr\n      <span id=\"timezone\">, {timezone.timezone} </span>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport default function Clock(props) {\n  const [weather, setWeather] = useState({\n    coord: {\n      lon: 12.37,\n      lat: 51.34\n    },\n    weather: [\n      {\n        id: 800,\n        main: \"Clear\",\n        description: \"clear sky\",\n        icon: \"01n\"\n      }\n    ],\n    base: \"stations\",\n    main: {\n      temp: 10.3,\n      pressure: 1022,\n      humidity: 75,\n      temp_min: 3,\n      temp_max: 5\n    },\n    visibility: 10000,\n    wind: {\n      speed: 4.1,\n      deg: 170\n    },\n    clouds: {\n      all: 0\n    },\n    dt: 1550443800,\n    sys: {\n      type: 1,\n      id: 1273,\n      message: 0.0038,\n      country: \"DE\",\n      sunrise: 1550384342,\n      sunset: 1550421042\n    },\n    id: 2879139,\n    name: \"Leipzig\",\n    cod: 200\n  });\n\n  async function updateWeather() {\n    const result = await axios(\n      \"https://openweathermap.org/data/2.5/weather/?appid=b6907d289e10d714a6e88b30761fae22&id=2879139&units=metric\"\n    );\n\n    setWeather(result.data);\n  }\n\n  useEffect(() => {\n    updateWeather();\n  }, []);\n\n  useEffect(() => {\n    let timer = setTimeout(() => updateWeather(), 600000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  });\n\n  return (\n    <div id=\"weather\">\n      Wetter in {weather.name}: {Math.ceil(weather.main.temp)}°C,{\" \"}\n      {weather.clouds.all < 10 ? \"wolkenlos\" : weather.clouds.all + \"% bewölkt\"}\n    </div>\n  );\n}\n","import React from \"react\";\nimport Clock from \"./Clock\";\nimport Weather from \"./Weather\";\n\nexport default function Header(props) {\n  return (\n    <header>\n      <Clock />\n      <Weather />\n    </header>\n  );\n}\n","import React from \"react\";\n\nexport default function Logo(props) {\n  return (\n    <div id=\"logo\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 89.1408 63.7354\">\n        <defs>\n          <style>\n            {`.cls {\n              fill: #eee;\n            }`}\n          </style>\n        </defs>\n        <path\n          className=\"cls\"\n          d=\"M34.1429,5.5613h4.171V1.39H32.7525V0h6.9517V6.9517H32.7525V2.7807h1.39Z\"\n        />\n        <path\n          className=\"cls\"\n          d=\"M48.0462,0V1.39H41.0945V0ZM41.0945,2.7807h6.9517v1.39H42.4849v1.39h5.5613v1.39H41.0945Z\"\n        />\n        <path\n          className=\"cls\"\n          d=\"M52.2172,4.171h-1.39V6.9517h-1.39V0h6.9516V4.171H53.9334l2.4548,2.7807H54.672ZM50.8269,1.39v1.39h4.171V1.39Z\"\n        />\n        <path\n          className=\"cls\"\n          d=\"M8.1881,15.151l.91.91V19.7H0V10.602H9.0979v3.6392Zm-.91-.91v-1.82H1.82v1.82ZM1.82,16.0608v1.82H7.2783v-1.82Z\"\n        />\n        <path\n          className=\"cls\"\n          d=\"M20.0154,10.602V19.7H10.9175V10.602Zm-7.2783,1.82V17.88h5.4588V12.4216Z\"\n        />\n        <path\n          className=\"cls\"\n          d=\"M30.933,10.602V19.7H21.835V10.602Zm-7.2784,1.82V17.88h5.4588V12.4216Z\"\n        />\n        <path\n          className=\"cls\"\n          d=\"M32.7525,19.7V10.602h1.82v3.6392l4.6343-3.6392h2.6441l-5.4588,4.6627L41.8505,19.7H39.1779l-4.6058-3.6391V19.7Z\"\n        />\n        <path\n          className=\"cls\"\n          d=\"M0,7.8616H89.1408v1.82H45.3117V19.7958h-1.82V9.6812H0Z\"\n        />\n        <path\n          className=\"cls\"\n          d=\"M50.93,16.0608H49.11V19.7H47.29V10.602h9.0979v5.4588H53.1755L56.3882,19.7h-2.246Zm-1.82-3.6392v1.82h5.4588v-1.82Z\"\n        />\n        <path\n          className=\"cls\"\n          d=\"M60.0274,10.602V17.88h5.4588V10.602h1.82V19.7H58.2078V10.602Z\"\n        />\n        <path\n          className=\"cls\"\n          d=\"M70.9449,19.7h-1.82V10.602h9.098v5.4588H70.9449Zm5.4588-5.4587v-1.82H70.9449v1.82Z\"\n        />\n        <path\n          className=\"cls\"\n          d=\"M81.8624,19.7h-1.82V10.602h9.098v5.4588H81.8624Zm5.4588-5.4587v-1.82H81.8624v1.82Z\"\n        />\n        <polygon\n          className=\"cls\"\n          points=\"58.408 36.172 81.872 36.172 83.672 32.533 60.033 32.533 58.408 36.172\"\n        />\n        <polygon\n          className=\"cls\"\n          points=\"87.331 25.255 89.131 21.615 64.908 21.615 63.283 25.255 87.331 25.255\"\n        />\n        <polygon\n          className=\"cls\"\n          points=\"62.471 27.074 60.846 30.713 84.601 30.713 86.402 27.074 62.471 27.074\"\n        />\n        <polygon\n          className=\"cls\"\n          points=\"30.732 36.172 7.269 36.172 5.468 32.533 29.107 32.533 30.732 36.172\"\n        />\n        <polygon\n          className=\"cls\"\n          points=\"57.596 37.992 47.973 59.543 44.863 59.543 44.278 59.543 41.168 59.543 31.545 37.992 25.568 37.992 38.304 63.735 44.278 63.735 44.863 63.735 50.837 63.735 63.572 37.992 57.596 37.992\"\n        />\n        <polygon\n          className=\"cls\"\n          points=\"1.81 25.255 0.01 21.615 24.233 21.615 25.858 25.255 1.81 25.255\"\n        />\n        <polygon\n          className=\"cls\"\n          points=\"26.67 27.074 28.295 30.713 4.539 30.713 2.739 27.074 26.67 27.074\"\n        />\n        <rect\n          className=\"cls\"\n          x=\"42.8696\"\n          y=\"28.2079\"\n          width=\"3.4016\"\n          height=\"1.1339\"\n        />\n        <rect\n          className=\"cls\"\n          x=\"42.8696\"\n          y=\"30.4756\"\n          width=\"3.4016\"\n          height=\"1.1339\"\n        />\n        <path\n          className=\"cls\"\n          d=\"M56.9174,21.6153H27.7816l14.6063,34.666h4.365l14.6064-34.666Zm-4.9769,6.5926H49.6728v4.5354H48.5389V28.2079H47.405v1.1338l-.5669.567.5669.5669v2.2677H37.2V29.3417h1.1339V31.61h3.4016V28.2079H37.2V27.074h14.74Z\"\n        />\n      </svg>\n    </div>\n  );\n}\n","import React, { Component, Fragment as F } from \"react\";\nimport Header from \"./components/Header\";\nimport Logo from \"./components/Logo\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <F>\n        <Header />\n        <Logo />\n      </F>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}